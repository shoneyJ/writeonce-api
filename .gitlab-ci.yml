stages:
  - build
  - push
  - deploy
 
variables: 
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  TAG: $CI_COMMIT_REF_SLUG

# build:
#   stage: build
#   image: docker:20.10.7
#   services:
#     - docker:20.10.7-dind
#   before_script:
#     - echo "Setting up Docker environment"  
#   script:
#     - docker build --build-arg PORT=$API_PORT --build-arg AWS_INFRA_BASE_URL=$AWS_INFRA_BASE_URL --build-arg DATABASE_URL=$DATABASE_URL --build-arg API_ACCESS_TOKEN=$API_ACCESS_TOKEN --build-arg API_ACCESS_ADMIN_TOKEN=$API_ACCESS_ADMIN_TOKEN -t ${IMAGE_NAME}:${TAG} .

push:
  stage: push
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - echo "Logging into Docker registry"  
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push ${IMAGE_NAME}:${TAG}
  only:
    - main

deploy:
  stage: deploy
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - echo "Docker set docker auth config"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -T -o StrictHostKeyChecking=no deployer@writeonce.de \
        'mkdir -p ~/.docker && echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json'
    - docker pull $IMAGE_NAME:$TAG

  script:
    - ssh -T -o StrictHostKeyChecking=no deployer@writeonce.de "
        echo \$IMAGE_NAME:\$TAG:\$API_PORT;" 
        # docker run -d \
        #   --name writeonce-manage-article-api \
        #   --network writeonce-network \
        #   -p $API_PORT:$API_PORT \
        #   --restart always \
        #   $IMAGE_NAME:$TAG"
    - ssh-agent -k
  only:
    - main