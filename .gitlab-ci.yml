stages:
  - build
  - push
  - deploy
variables: 
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

build:
  stage: build
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - echo "Setting up Docker environment"  
  script:
    - docker info  # Verify Docker is running
    - docker build -t ${IMAGE_NAME} .

push:
  stage: push
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - echo "Logging into Docker registry"  
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push ${IMAGE_NAME}
  only:
    - main

deploy:
  stage: deploy
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - echo "Docker login on server"
    - ssh -T -o StrictHostKeyChecking=no deployer@writeonce.de 'docker login $CI_REGISTRY'
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -T -o StrictHostKeyChecking=no deployer@writeonce.de '
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && \
      docker pull $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_NAME && \
      docker run -d \
          -e AWS_INFRA_BASE_URL=$AWS_INFRA_BASE_URL \
          -e PORT=$API_PORT \
          -e API_ACCESS_TOKEN=$API_ACCESS_TOKEN \
          -e DATABASE_URL=$DATABASE_URL \
          --name $CI_PROJECT_NAME-container \
          $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_REF_NAME' 
    - ssh-agent -k
  only:
    - main